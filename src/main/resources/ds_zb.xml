<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd">

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="order" value="1" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="location" value="classpath:config.properties" />
		<property name="fileEncoding" value="utf-8" />
	</bean>

	<bean id="zb" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">

		<property name="url" value="${zb.url}" />
		<property name="username" value="${zb.username}" />
		<property name="password" value="${zb.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="maxActive" value="${jdbc.maxActive}" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${jdbc.maxWait}" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<!-- 申请连接的时候检测 -->
		<property name="testWhileIdle" value="true" />

		<!-- 这里建议配置为TRUE，防止取到的连接不可用 -->
		<!-- 申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能 -->
		<property name="testOnBorrow" value="true" />
		<!-- 归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能 -->
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小,mysql下建议关闭 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="100" />

		<!-- 这里配置提交方式，默认就是TRUE，可以不用配置 -->
		<property name="defaultAutoCommit" value="true" />

		<!-- 验证连接有效与否的SQL，不同的数据配置不同 -->
		<property name="validationQuery"
			value="${zb.validationQuery}" />

		<!-- 打开 removeAbandoned 功能,处理连接泄露 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800 秒，也就是 30 分钟,datasource.getConnontion() 取得的连接必须在removeAbandonedTimeout这么多秒内调用close() -->
		<property name="removeAbandonedTimeout" value="3600" />
		<property name="logAbandoned" value="true" />
		<property name="proxyFilters">
			<list>
				<ref bean="statFilter" />
				<ref bean="logFilter" />
				<ref bean="wallFilter" />
			</list>
		</property>
	</bean>

	<!-- 慢SQL记录 *start* -->
	<bean id="statFilter"
		class="com.alibaba.druid.filter.stat.StatFilter">
		<!-- 开启合并sql -->
		<property name="mergeSql" value="true" />
		<!-- 开启慢查询语句,1秒 -->
		<property name="slowSqlMillis" value="2000" />
		<property name="logSlowSql" value="true" />
	</bean>

	<!-- logFilter -->
	<bean id="logFilter"
		class="com.alibaba.druid.filter.logging.Slf4jLogFilter">
		<property name="connectionLogEnabled" value="false" />
		<property name="statementLogEnabled" value="true" />
		<property name="resultSetLogEnabled" value="true" />
		<property name="statementExecutableSqlLogEnable" value="true" />
	</bean>





	<bean id="wallFilter" class="com.alibaba.druid.wall.WallFilter">
		<property name="dbType" value="${jdbc.dbtype}" />
	</bean>


	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="zb" />
	</bean>


	<!-- 声明式事务 -->
	<tx:annotation-driven
		transaction-manager="transactionManager" proxy-target-class="true" />


	<!-- do开头方法传播机制是required，其它的是supports -->
	<tx:advice id="transactionAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="query*" propagation="REQUIRED"
				read-only="true" />
			<tx:method name="get*" propagation="REQUIRED"
				read-only="true" />
			<tx:method name="select*" propagation="REQUIRED"
				read-only="true" />
			<tx:method name="list*" propagation="REQUIRED"
				read-only="true" />
			<tx:method name="*" read-only="false"
				propagation="REQUIRED" rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>


	<!-- 配置切面 -->
	<aop:config>
		<aop:pointcut id="transactionPointcut"
			expression="execution(* 
		com.dt.module.*.service..*.*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut"
			advice-ref="transactionAdvice" />
	</aop:config>







</beans>